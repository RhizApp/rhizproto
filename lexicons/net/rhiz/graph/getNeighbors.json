{
  "lexicon": 1,
  "id": "net.rhiz.graph.getNeighbors",
  "defs": {
    "main": {
      "type": "query",
      "description": "Get all direct relationships (neighbors) for an entity in the relationship graph.",
      "parameters": {
        "type": "params",
        "required": ["did"],
        "properties": {
          "did": {
            "type": "string",
            "format": "did",
            "description": "Entity DID to get neighbors for"
          },
          "minStrength": {
            "type": "integer",
            "minimum": 0,
            "maximum": 100,
            "default": 0,
            "description": "Minimum relationship strength to include (0-100)"
          },
          "relationshipTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional filter by relationship types (professional, personal, etc)"
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "maximum": 100,
            "default": 50,
            "description": "Maximum number of neighbors to return"
          },
          "cursor": {
            "type": "string",
            "description": "Pagination cursor"
          }
        }
      },
      "output": {
        "encoding": "application/json",
        "schema": {
          "type": "ref",
          "ref": "#neighborsList"
        }
      }
    },
    "neighborsList": {
      "type": "object",
      "required": ["neighbors"],
      "properties": {
        "neighbors": {
          "type": "array",
          "items": {
            "type": "ref",
            "ref": "#neighborItem"
          }
        },
        "cursor": {
          "type": "string",
          "description": "Pagination cursor for next page"
        }
      }
    },
    "neighborItem": {
      "type": "object",
      "required": ["entity", "relationshipUri", "strength"],
      "properties": {
        "entity": {
          "type": "ref",
          "ref": "net.rhiz.entity.defs#entityView"
        },
        "relationshipUri": {
          "type": "string",
          "format": "at-uri"
        },
        "relationshipCid": {
          "type": "string",
          "format": "cid"
        },
        "strength": {
          "type": "integer",
          "minimum": 0,
          "maximum": 100,
          "description": "Relationship strength (0-100)"
        },
        "type": {
          "type": "string",
          "description": "Relationship type"
        }
      }
    }
  }
}

